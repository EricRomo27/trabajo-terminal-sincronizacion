"""Helpers para exponer botones de descarga de gr치ficas."""

from __future__ import annotations

import io

import streamlit as st

from .runtime import runtime_activo


def _mostrar_advertencia(mensaje: str) -> None:
    """Muestra una advertencia si el runtime est치 disponible."""

    if runtime_activo():
        st.warning(mensaje)


def boton_descarga_plotly(
    figura: "plotly.graph_objects.Figure",
    nombre_archivo: str,
    *,
    etiqueta: str = "游닌 Descargar gr치fica",
    formato: str = "png",
) -> None:
    """Renderiza un bot칩n para descargar una figura de Plotly como imagen.

    La funci칩n es segura de invocar fuera del runtime de Streamlit: simplemente
    no realiza ninguna acci칩n en ese escenario. Si la figura no puede
    exportarse (por ejemplo, por falta de Kaleido), se muestra una advertencia
    amigable en la interfaz.
    """

    if not runtime_activo():
        return

    try:
        from plotly.graph_objects import Figure  # importaci칩n perezosa
    except ImportError:
        _mostrar_advertencia(
            "Plotly no est치 disponible para exportar la gr치fica. Instala 'plotly' y 'kaleido' para habilitar esta funci칩n."
        )
        return

    if not isinstance(figura, Figure):
        _mostrar_advertencia("La descarga solo est치 disponible para objetos plotly.graph_objects.Figure.")
        return

    buffer = io.BytesIO()
    try:
        figura.write_image(buffer, format=formato)
    except Exception:  # pragma: no cover - depende de Kaleido instalado
        _mostrar_advertencia(
            "No fue posible generar la descarga de la gr치fica (verifica que Kaleido est칠 correctamente instalado)."
        )
        return

    buffer.seek(0)
    st.download_button(
        label=etiqueta,
        data=buffer,
        file_name=nombre_archivo,
        mime=f"image/{formato}",
    )


def boton_descarga_altair(
    grafica: "altair.Chart",
    nombre_archivo: str,
    *,
    etiqueta: str = "游닌 Descargar gr치fica (HTML)",
) -> None:
    """Renderiza un bot칩n para descargar gr치ficos de Altair como archivo HTML interactivo."""

    if not runtime_activo():
        return

    try:
        import altair as alt  # importaci칩n perezosa
    except ImportError:
        _mostrar_advertencia("Altair no est치 disponible para exportar la gr치fica.")
        return

    if not isinstance(grafica, alt.Chart):
        _mostrar_advertencia("La descarga solo est치 disponible para objetos altair.Chart.")
        return

    try:
        contenido_html = grafica.to_html()
    except Exception:  # pragma: no cover - depende de la configuraci칩n del gr치fico
        _mostrar_advertencia("No se pudo generar el archivo HTML de la gr치fica para su descarga.")
        return

    st.download_button(
        label=etiqueta,
        data=contenido_html,
        file_name=nombre_archivo,
        mime="text/html",
    )


__all__ = ["boton_descarga_plotly", "boton_descarga_altair"]
